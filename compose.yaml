name: akson
services:
  api:
    build:
      context: ./api
    develop:
      watch:
        - path: ./api
          action: sync
          target: /app
          ignore:
            - .venv/
            - chats/
        - path: ./api/pyproject.toml
          action: rebuild
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      start_interval: 1s
      start_period: 5s
      timeout: 5s
      retries: 3
    ports:
      - ${AKSON_API_PORT}:8000
    volumes:
      - ./api/chats:/app/chats
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - ALLOW_ORIGINS=${AKSON_WEB_EXTERNAL_URL}
    env_file:
      - ./api/.env

  web:
    build:
      context: ./web
    develop:
      watch:
        - path: ./web
          action: sync
          target: /app
          ignore:
            - node_modules/
        - path: ./askon-web/package.json
          action: rebuild
    depends_on:
      api:
        condition: service_healthy
    ports:
      - ${AKSON_WEB_PORT}:5173
    environment:
      - VITE_API_BASE_URL=${AKSON_API_EXTERNAL_URL}

  cli:
    build:
      context: ./
      dockerfile: ./cli/Dockerfile
    profiles:
      - cli
    depends_on:
      api:
        condition: service_healthy
    environment:
      - AKSON_API_BASE_URL=http://api:8000

  telegram-bot:
    build:
      context: ./
      dockerfile: ./telegram-bot/Dockerfile
    develop:
      watch:
        - path: ./telegram-bot
          action: sync+restart
          target: /app
          ignore:
            - .venv/
        - path: ./telegram-bot/pyproject.toml
          action: rebuild
    depends_on:
      api:
        condition: service_healthy
    # TODO Save chat ID
    # volumes:
    #   - ./api/chats:/app/chats
    environment:
      - AKSON_API_BASE_URL=http://api:8000
    env_file:
      - ./telegram-bot/.env
